{"@timestamp":"2025-08-11T15:39:56.70458709+03:00","@version":"1","message":"Starting ProductCatalogServiceApplication using Java 17.0.10 with PID 18158 (/home/juma/IdeaProjects/spring/E-commerce-app/ProductCatalogService/build/classes/java/main started by juma in /home/juma/IdeaProjects/spring/E-commerce-app)","logger_name":"com.ecommerceapp.productcatalogservice.ProductCatalogServiceApplication","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:39:56.72596493+03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.ecommerceapp.productcatalogservice.ProductCatalogServiceApplication","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:39:56.773884484+03:00","@version":"1","message":"Fetching config from server at : http://localhost:8000","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:39:56.774588234+03:00","@version":"1","message":"Located environment: name=product-catalog, profiles=[default], label=null, version=null, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:39:57.678438186+03:00","@version":"1","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:39:57.948647935+03:00","@version":"1","message":"Finished Spring Data repository scanning in 260 ms. Found 1 MongoDB repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:39:58.173259197+03:00","@version":"1","message":"BeanFactory id=38f601f6-be9d-3024-87a4-7c24db56519c","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:39:58.500773254+03:00","@version":"1","message":"Tomcat initialized with port 8020 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:39:58.513727695+03:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:39:58.514377421+03:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.42]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:39:58.571467307+03:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:39:58.572567327+03:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 1795 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:39:58.86511621+03:00","@version":"1","message":"Exception in monitor thread while connecting to server localhost:27017","logger_name":"org.mongodb.driver.cluster","thread_name":"cluster-ClusterId{value='6899e49ee814b5773974082a', description='null'}-localhost:27017","level":"INFO","level_value":20000,"stack_trace":"com.mongodb.MongoSocketOpenException: Exception opening socket\n\tat com.mongodb.internal.connection.SocketStream.lambda$open$0(SocketStream.java:85)\n\tat java.base/java.util.Optional.orElseThrow(Optional.java:403)\n\tat com.mongodb.internal.connection.SocketStream.open(SocketStream.java:85)\n\tat com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:233)\n\tat com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitor.lookupServerDescription(DefaultServerMonitor.java:219)\n\tat com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitor.run(DefaultServerMonitor.java:176)\nCaused by: java.net.ConnectException: Connection refused\n\tat java.base/sun.nio.ch.Net.pollConnect(Native Method)\n\tat java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)\n\tat java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\n\tat java.base/java.net.Socket.connect(Socket.java:633)\n\tat com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:76)\n\tat com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:104)\n\tat com.mongodb.internal.connection.SocketStream.open(SocketStream.java:79)\n\t... 3 common frames omitted\n","service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:39:58.878987174+03:00","@version":"1","message":"MongoClient with metadata {\"driver\": {\"name\": \"mongo-java-driver|sync|spring-boot\", \"version\": \"5.5.1\"}, \"os\": {\"type\": \"Linux\", \"name\": \"Linux\", \"architecture\": \"amd64\", \"version\": \"6.8.0-65-generic\"}, \"platform\": \"Java/Amazon.com Inc./17.0.10+7-LTS\"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='mongo', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@11228bee, com.mongodb.Jep395RecordCodecProvider@7d626f2, com.mongodb.KotlinCodecProvider@460f1cdb]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}","logger_name":"org.mongodb.driver.client","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:40:00.004453094+03:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:40:00.059881983+03:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"main","level":"WARN","level_value":30000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:40:00.116328969+03:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:40:00.140083035+03:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:40:00.145141103+03:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:40:00.155573786+03:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:40:00.156032195+03:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:40:00.156702606+03:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:40:00.157052868+03:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:40:00.157466848+03:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:40:00.157802195+03:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:40:00.158167975+03:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:40:00.548946946+03:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:40:00.551313766+03:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:40:00.553988665+03:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:40:00.555825857+03:00","@version":"1","message":"Discovery Client initialized at timestamp 1754916000555 with initial instances count: 2","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:40:00.560359871+03:00","@version":"1","message":"Registering application PRODUCT-CATALOG with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:40:00.561387584+03:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1754916000561, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:40:00.563566898+03:00","@version":"1","message":"DiscoveryClient_PRODUCT-CATALOG/jumapaul:product-catalog:8020: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:40:00.580439268+03:00","@version":"1","message":"Tomcat started on port 8020 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:40:00.581928126+03:00","@version":"1","message":"Updating port to 8020","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:40:00.598249483+03:00","@version":"1","message":"DiscoveryClient_PRODUCT-CATALOG/jumapaul:product-catalog:8020 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:40:00.618170431+03:00","@version":"1","message":"Started ProductCatalogServiceApplication in 5.047 seconds (process running for 6.973)","logger_name":"com.ecommerceapp.productcatalogservice.ProductCatalogServiceApplication","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:40:49.250441458+03:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8020-exec-1","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:40:49.251187848+03:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8020-exec-1","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:40:49.252855683+03:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8020-exec-1","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:40:49.368539527+03:00","@version":"1","message":"Waiting for server to become available for operation with ID 8. Remaining time: 29991 ms. Selector: ReadPreferenceServerSelector{readPreference=primary}, topology description: {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused}}].","logger_name":"org.mongodb.driver.cluster","thread_name":"http-nio-8020-exec-1","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:41:49.466928852+03:00","@version":"1","message":"Exception in monitor thread while connecting to server localhost:27017","logger_name":"org.mongodb.driver.cluster","thread_name":"cluster-ClusterId{value='6899e49ee814b5773974082a', description='null'}-localhost:27017","level":"INFO","level_value":20000,"stack_trace":"com.mongodb.MongoSocketReadException: Prematurely reached end of stream\n\tat com.mongodb.internal.connection.SocketStream.read(SocketStream.java:184)\n\tat com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:824)\n\tat com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:517)\n\tat com.mongodb.internal.connection.InternalStreamConnection.sendAndReceiveInternal(InternalStreamConnection.java:448)\n\tat com.mongodb.internal.connection.InternalStreamConnection.lambda$sendAndReceive$0(InternalStreamConnection.java:375)\n\tat com.mongodb.internal.connection.InternalStreamConnection.sendAndReceive(InternalStreamConnection.java:378)\n\tat com.mongodb.internal.connection.CommandHelper.sendAndReceive(CommandHelper.java:100)\n\tat com.mongodb.internal.connection.CommandHelper.executeCommand(CommandHelper.java:49)\n\tat com.mongodb.internal.connection.InternalStreamConnectionInitializer.initializeConnectionDescription(InternalStreamConnectionInitializer.java:144)\n\tat com.mongodb.internal.connection.InternalStreamConnectionInitializer.startHandshake(InternalStreamConnectionInitializer.java:79)\n\tat com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:235)\n\tat com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitor.lookupServerDescription(DefaultServerMonitor.java:219)\n\tat com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitor.run(DefaultServerMonitor.java:176)\n","service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:41:59.490046499+03:00","@version":"1","message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=18473299, minRoundTripTimeNanos=0}","logger_name":"org.mongodb.driver.cluster","thread_name":"cluster-ClusterId{value='6899e49ee814b5773974082a', description='null'}-localhost:27017","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:06.181494444+03:00","@version":"1","message":"Unregistering application PRODUCT-CATALOG with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:06.18296723+03:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1754916126182, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:06.183821105+03:00","@version":"1","message":"DiscoveryClient_PRODUCT-CATALOG/jumapaul:product-catalog:8020: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:06.187717431+03:00","@version":"1","message":"Commencing graceful shutdown. Waiting for active requests to complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:06.191953649+03:00","@version":"1","message":"Graceful shutdown complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:06.194317531+03:00","@version":"1","message":"DiscoveryClient_PRODUCT-CATALOG/jumapaul:product-catalog:8020 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:06.203932506+03:00","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:09.205033546+03:00","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:09.215287294+03:00","@version":"1","message":"DiscoveryClient_PRODUCT-CATALOG/jumapaul:product-catalog:8020 - deregister  status: 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:09.216276519+03:00","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:13.766105628+03:00","@version":"1","message":"Starting ProductCatalogServiceApplication using Java 17.0.10 with PID 18807 (/home/juma/IdeaProjects/spring/E-commerce-app/ProductCatalogService/build/classes/java/main started by juma in /home/juma/IdeaProjects/spring/E-commerce-app)","logger_name":"com.ecommerceapp.productcatalogservice.ProductCatalogServiceApplication","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:13.781640126+03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"com.ecommerceapp.productcatalogservice.ProductCatalogServiceApplication","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:13.831542484+03:00","@version":"1","message":"Fetching config from server at : http://localhost:8000","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:13.832289102+03:00","@version":"1","message":"Located environment: name=product-catalog, profiles=[default], label=null, version=null, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServerConfigDataLoader","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:14.625314871+03:00","@version":"1","message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:14.786098868+03:00","@version":"1","message":"Finished Spring Data repository scanning in 153 ms. Found 1 MongoDB repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:14.967262157+03:00","@version":"1","message":"BeanFactory id=38f601f6-be9d-3024-87a4-7c24db56519c","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:15.286394632+03:00","@version":"1","message":"Tomcat initialized with port 8020 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:15.300060086+03:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:15.301030799+03:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.42]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:15.357884827+03:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:15.358833317+03:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 1523 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:15.607232088+03:00","@version":"1","message":"MongoClient with metadata {\"driver\": {\"name\": \"mongo-java-driver|sync|spring-boot\", \"version\": \"5.5.1\"}, \"os\": {\"type\": \"Linux\", \"name\": \"Linux\", \"architecture\": \"amd64\", \"version\": \"6.8.0-65-generic\"}, \"platform\": \"Java/Amazon.com Inc./17.0.10+7-LTS\"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='mongo', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@64420e34, com.mongodb.Jep395RecordCodecProvider@667a467f, com.mongodb.KotlinCodecProvider@324e8baa]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}","logger_name":"org.mongodb.driver.client","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:15.616227188+03:00","@version":"1","message":"Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=19679353, minRoundTripTimeNanos=0}","logger_name":"org.mongodb.driver.cluster","thread_name":"cluster-ClusterId{value='6899e527efa1c16a4c720e37', description='null'}-localhost:27017","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:16.532382834+03:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:16.5707696+03:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"main","level":"WARN","level_value":30000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:16.625913943+03:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:16.648958585+03:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:16.653587525+03:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:16.661888852+03:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:16.66231828+03:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:16.662789539+03:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:16.66314599+03:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:16.663563573+03:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:16.663901167+03:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:16.664144616+03:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:17.036484252+03:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:17.041457723+03:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:17.045165227+03:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:17.047854672+03:00","@version":"1","message":"Discovery Client initialized at timestamp 1754916137047 with initial instances count: 3","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:17.054819972+03:00","@version":"1","message":"Registering application PRODUCT-CATALOG with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:17.055997717+03:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1754916137055, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:17.059024412+03:00","@version":"1","message":"DiscoveryClient_PRODUCT-CATALOG/jumapaul:product-catalog:8020: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:17.088289436+03:00","@version":"1","message":"Tomcat started on port 8020 (http) with context path '/'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:17.089770626+03:00","@version":"1","message":"Updating port to 8020","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:17.106020962+03:00","@version":"1","message":"DiscoveryClient_PRODUCT-CATALOG/jumapaul:product-catalog:8020 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:42:17.127691512+03:00","@version":"1","message":"Started ProductCatalogServiceApplication in 4.28 seconds (process running for 5.999)","logger_name":"com.ecommerceapp.productcatalogservice.ProductCatalogServiceApplication","thread_name":"main","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:45:03.299336513+03:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","thread_name":"http-nio-8020-exec-1","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:45:03.300109927+03:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8020-exec-1","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:45:03.302336566+03:00","@version":"1","message":"Completed initialization in 2 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-8020-exec-1","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:47:16.666925279+03:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:52:16.669805306+03:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T15:57:16.674929476+03:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T16:02:16.676763848+03:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T16:07:16.678791261+03:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T16:12:16.681233335+03:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T16:17:16.684266591+03:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T16:22:16.68734856+03:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T16:27:16.689927298+03:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T16:32:16.692554588+03:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T16:37:16.694608974+03:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T16:42:16.696762531+03:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T16:47:16.698696367+03:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T16:52:16.700564359+03:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T16:57:16.701958781+03:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T17:02:16.703980021+03:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T17:07:16.705268182+03:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T17:12:16.707547416+03:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T17:17:16.710042596+03:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T17:22:16.712229565+03:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T17:27:16.715059615+03:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T19:26:11.945468006+03:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T19:31:11.948440744+03:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-%d","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T19:32:32.481045176+03:00","@version":"1","message":"Exception in monitor thread while connecting to server localhost:27017","logger_name":"org.mongodb.driver.cluster","thread_name":"cluster-ClusterId{value='6899e527efa1c16a4c720e37', description='null'}-localhost:27017","level":"INFO","level_value":20000,"stack_trace":"com.mongodb.MongoNodeIsRecoveringException: Command failed with error 11600 (InterruptedAtShutdown): 'interrupted at shutdown' on server localhost:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"interrupted at shutdown\", \"code\": 11600, \"codeName\": \"InterruptedAtShutdown\"}\n\tat com.mongodb.internal.connection.ProtocolHelper.createSpecialException(ProtocolHelper.java:264)\n\tat com.mongodb.internal.connection.ProtocolHelper.getCommandFailureException(ProtocolHelper.java:206)\n\tat com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:520)\n\tat com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:469)\n\tat com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitor.lookupServerDescription(DefaultServerMonitor.java:249)\n\tat com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitor.run(DefaultServerMonitor.java:176)\n","service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T19:32:33.765566604+03:00","@version":"1","message":"Unregistering application PRODUCT-CATALOG with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T19:32:33.807522494+03:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1754929953807, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T19:32:33.825528308+03:00","@version":"1","message":"DiscoveryClient_PRODUCT-CATALOG/jumapaul:product-catalog:8020: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T19:32:33.845740423+03:00","@version":"1","message":"Commencing graceful shutdown. Waiting for active requests to complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T19:32:33.930026654+03:00","@version":"1","message":"Graceful shutdown complete","logger_name":"org.springframework.boot.web.embedded.tomcat.GracefulShutdown","thread_name":"tomcat-shutdown","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T19:32:33.957894382+03:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=I/O error on POST request for \"http://localhost:8761/eureka/apps/PRODUCT-CATALOG\": localhost:8761 failed to respond stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:8761/eureka/apps/PRODUCT-CATALOG\": localhost:8761 failed to respond\n\tat org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:926)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:906)\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:841)\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:702)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:87)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828)\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)\n\tat com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\nCaused by: org.apache.hc.core5.http.NoHttpResponseException: localhost:8761 failed to respond\n\tat org.apache.hc.core5.http.impl.io.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:333)\n\tat org.apache.hc.core5.http.impl.io.HttpRequestExecutor.execute(HttpRequestExecutor.java:196)\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.lambda$execute$0(InternalExecRuntime.java:236)\n\tat org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager$InternalConnectionEndpoint.execute(PoolingHttpClientConnectionManager.java:791)\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.execute(InternalExecRuntime.java:233)\n\tat org.apache.hc.client5.http.impl.classic.MainClientExec.execute(MainClientExec.java:120)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:200)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:195)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:150)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:110)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:185)\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)\n\tat org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)\n\tat org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:71)\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:117)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$2(RestTemplateTransportClientFactory.java:145)\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:900)\n\t... 21 more\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T19:32:33.984077468+03:00","@version":"1","message":"Request execution failed with message: I/O error on POST request for \"http://localhost:8761/eureka/apps/PRODUCT-CATALOG\": localhost:8761 failed to respond","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"WARN","level_value":30000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T19:32:34.013336966+03:00","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T19:32:34.101285072+03:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on POST request for \"http://localhost:8761/eureka/apps/PRODUCT-CATALOG\": Connect to http://localhost:8761 failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for \"http://localhost:8761/eureka/apps/PRODUCT-CATALOG\": Connect to http://localhost:8761 failed: Connection refused\n\tat org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:926)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:906)\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:841)\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:702)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:87)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828)\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)\n\tat com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\nCaused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 failed: Connection refused\n\tat java.base/sun.nio.ch.Net.pollConnect(Native Method)\n\tat java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)\n\tat java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\n\tat java.base/java.net.Socket.connect(Socket.java:633)\n\tat org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:205)\n\tat org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:490)\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:164)\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:174)\n\tat org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:144)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:195)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:150)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:110)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:185)\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)\n\tat org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)\n\tat org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:71)\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:117)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$2(RestTemplateTransportClientFactory.java:145)\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:900)\n\t... 22 more\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T19:32:34.10233865+03:00","@version":"1","message":"Request execution failed with message: I/O error on POST request for \"http://localhost:8761/eureka/apps/PRODUCT-CATALOG\": Connect to http://localhost:8761 failed: Connection refused","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"WARN","level_value":30000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T19:32:34.112081714+03:00","@version":"1","message":"DiscoveryClient_PRODUCT-CATALOG/jumapaul:product-catalog:8020 - registration failed Cannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828)\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)\n\tat com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T19:32:34.112914301+03:00","@version":"1","message":"There was a problem with the instance info replicator","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"DiscoveryClient-InstanceInfoReplicator-%d","level":"WARN","level_value":30000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)\n\tat com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:828)\n\tat com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:125)\n\tat com.netflix.discovery.InstanceInfoReplicator$2.run(InstanceInfoReplicator.java:105)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T19:32:34.113805207+03:00","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T19:32:34.149471982+03:00","@version":"1","message":"Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=I/O error on DELETE request for \"http://localhost:8761/eureka/apps/PRODUCT-CATALOG/jumapaul:product-catalog:8020\": Connect to http://localhost:8761 failed: Connection refused stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for \"http://localhost:8761/eureka/apps/PRODUCT-CATALOG/jumapaul:product-catalog:8020\": Connect to http://localhost:8761 failed: Connection refused\n\tat org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:926)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:906)\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:841)\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:702)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:100)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)\n\tat com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:919)\n\tat com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:900)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:387)\n\tat org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:134)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:798)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:748)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1474)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:707)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1467)\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1219)\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1180)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:179)\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1126)\n\tat org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:147)\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\n\tat org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:116)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\nCaused by: org.apache.hc.client5.http.HttpHostConnectException: Connect to http://localhost:8761 failed: Connection refused\n\tat java.base/sun.nio.ch.Net.pollConnect(Native Method)\n\tat java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)\n\tat java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)\n\tat java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)\n\tat java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)\n\tat java.base/java.net.Socket.connect(Socket.java:633)\n\tat org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:205)\n\tat org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:490)\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:164)\n\tat org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:174)\n\tat org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:144)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:195)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:150)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:110)\n\tat org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)\n\tat org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:185)\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)\n\tat org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)\n\tat org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)\n\tat org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)\n\tat org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:71)\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:117)\n\tat org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$2(RestTemplateTransportClientFactory.java:145)\n\tat org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)\n\tat org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)\n\tat org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)\n\tat org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:81)\n\tat org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:900)\n\t... 40 more\n","logger_name":"com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T19:32:34.153230889+03:00","@version":"1","message":"Request execution failed with message: I/O error on DELETE request for \"http://localhost:8761/eureka/apps/PRODUCT-CATALOG/jumapaul:product-catalog:8020\": Connect to http://localhost:8761 failed: Connection refused","logger_name":"com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient","thread_name":"SpringApplicationShutdownHook","level":"WARN","level_value":30000,"service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T19:32:34.153947753+03:00","@version":"1","message":"DiscoveryClient_PRODUCT-CATALOG/jumapaul:product-catalog:8020 - de-registration failedCannot execute request on any known server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"ERROR","level_value":40000,"stack_trace":"com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server\n\tat com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)\n\tat com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:76)\n\tat com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)\n\tat com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:919)\n\tat com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:900)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)\n\tat org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:387)\n\tat org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:134)\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:798)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:748)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1474)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:707)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1467)\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1219)\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1180)\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:179)\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1126)\n\tat org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:147)\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:75)\n\tat org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:116)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","service":"product-service","version":"1.0.0"}
{"@timestamp":"2025-08-11T19:32:34.158253575+03:00","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000,"service":"product-service","version":"1.0.0"}
